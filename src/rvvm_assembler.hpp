auto nextToken() { } 

std::map<std::string, Operation> operation_from_string {
  { "lui"       , LUI       },
  { "auipc"     , AUIPC     },
  { "jal"       , JAL       },
  { "jalr"      , JALR      },
  { "beq"   	  , BEQ       },
  { "bne"   	  , BNE       },
  { "blt"   	  , BLT       },
  { "bge"   	  , BGE       },
  { "bltu"      , BLTU      },
  { "bgeu"      , BGEU      },
  { "lb"	      , LB        },
  { "lh"	      , LH        },
  { "lw"	      , LW        },
  { "lbu"	      , LBU       },
  { "lhu"	      , LHU       },
  { "sb"	      , SB        },
  { "sh"	      , SH        },
  { "sw"	      , SW        },
  { "addi"	    , ADDI      },
  { "slti"	    , SLTI      },
  { "sltiu"	    , SLTIU     },
  { "xori"	    , XORI      },
  { "ori"	      , ORI       },
  { "andi"	    , ANDI      },
  { "slli"	    , SLLI      },
  { "srli"	    , SRLI      },
  { "srai"	    , SRAI      },
  { "add"	      , ADD       },
  { "sub"	      , SUB       },
  { "sll"	      , SLL       },
  { "slt"	      , SLT       },
  { "sltu"      , SLTU      },
  { "xor"       , XOR       },
  { "srl"	      , SRL       },
  { "sra"	      , SRA       },
  { "or"	      , OR        },
  { "and"	      , AND       },
  { "fence"     , FENCE     },
  { "fence_tso" , FENCE_TSO },
  { "pause"     , PAUSE     },
  { "ecall"     , ECALL     },
  { "ebreak"    , EBREAK    },
};

auto assemble_line(std::string line) { }

auto assemble_program(std::vector<std::string> lines) { for (auto line : lines) break; }
